buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlinVersion"
  }
}

apply plugin: "io.spinnaker.plugin.service-extension"
apply plugin: "maven-publish"
apply plugin: "kotlin"
apply plugin: "kotlin-kapt"
apply plugin: "kotlin-spring"

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
  mavenLocal()
  jcenter()
  maven { url "http://dl.bintray.com/spinnaker/spinnaker/" }
}

dependencies {
  implementation(platform("com.netflix.spinnaker.kork:kork-bom:$korkVersion"))

  annotationProcessor("org.pf4j:pf4j:3.2.0")

  compileOnly("com.netflix.spinnaker.kork:kork-exceptions")
  compileOnly("com.netflix.spinnaker.kork:kork-plugins-api")
  compileOnly("com.netflix.spinnaker.orca:orca-api:$orcaVersion")

  compileOnly(group: 'com.netflix.spinnaker.kork', name: 'kork-plugins-spring-api', version: "${korkVersion}")
  compileOnly(group: "org.springframework", name: "spring-context", version: "5.2.1.RELEASE")

  compileOnly("com.fasterxml.jackson.core:jackson-core")
  compileOnly("com.fasterxml.jackson.core:jackson-databind")
  compileOnly("com.fasterxml.jackson.core:jackson-annotations")

  compileOnly 'com.squareup.retrofit2:retrofit:2.8.1'
  compileOnly 'com.squareup.retrofit2:converter-jackson:2.8.1'
  compileOnly group: 'com.fasterxml.jackson.module', name: 'jackson-module-kotlin', version: '2.9.8'

  kapt(group: 'org.pf4j', name: 'pf4j', version: "${pf4jVersion}")
}

spinnakerPlugin {
  serviceName = "orca"
  pluginClass = "io.spinnaker.plugin.gremlin.orca.GremlinStagePlugin"
}
